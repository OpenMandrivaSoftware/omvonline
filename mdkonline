#!/usr/bin/perl
################################################################################
# Mandriva Online Text User Interface                                          # 
#                                                                              #
# Copyright (C) 2001, 2002, 2003, 2004, Mandrakesoft SA
#                  2005 Mandriva                                               #
#                                                                              #
# Daouda Lo <daouda at mandriva dot com>                                       #
#
# This program is free software; you can redistribute it and/or modify         #
# it under the terms of the GNU General Public License Version 2 as            #
# published by the Free Software Foundation.                                   #
#                                                                              #
# This program is distributed in the hope that it will be useful,              #
# but WITHOUT ANY WARRANTY; without even the implied warranty of               #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                #
# GNU General Public License for more details.                                 #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
# along with this program; if not, write to the Free Software                  #
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.   #
################################################################################

use strict;
use lib qw(/usr/lib/libDrakX /usr/lib/libDrakX/drakfirsttime);
use standalone;

use interactive;
use common;
use wizards;
use lang;

use Getopt::Long;

BEGIN { unshift @::textdomains, 'mdkonline', 'drakfirstboot' }

use mdkonline;
use Digest::MD5  qw(md5 md5_hex md5_base64);

my $online_link = 'http://online3.mandriva.com/o/soap/';

my $confdir = '/root/.MdkOnline';
my $conffile = "$confdir/mdkupdate";
my $logfile = '/var/tmp/mdkonline.log';

my ($wiz, $greeting, $firstname, $lastname, $login, $account, $password, $npassword, $boxname, $cfmpassword, $email, $is_success, $key, $r, $createaccount, $sendconfres, $country, $ia, $gr, $alias);

my @info;

$ia = 1;

GetOptions('interactive!' => \$ia, 'login=s' => \$login, 'pass=s' => \$password, 'box=s' => \$boxname, 'country:s' => \$country);

my $in = interactive->vnew('su') if $ia;

#for compatibilities
mkdir_p($confdir) if !-d $confdir;
-e '/root/.mdkupdate' and system("mv", "/root/.mdkupdate", $conffile);

$::Wizard_title = N("Mandriva Online");

my %choices = (
	       account => N("I already have an account"),
	       noaccount => N("I want to subscribe")
	      );
  
my $choice = $choices{account};

my @greets = (N("Mr."), N("Mrs."), N("Ms."));

my %countries = map { lang::c2name($_) => $_ } lang::list_countries();
my $locale = lang::read('', $>);
$country = lang::c2name($locale->{country});
my $lang = $locale->{lang} || 'en_US';

my $descboxname;
my ($host_id, $host_key);

sub get_conf() {
    my ($wc, $rc) = mdkonline::read_conf();
    my $host = chomp_(`hostname`);
    $wc->{MACHINE} ||= $1 if $host =~ /(\w+)(.*)/;
    $login = $wc->{LOGIN}; $boxname = $wc->{MACHINE}; $descboxname = $wc->{DESCMACHINE};
}

sub send_conf_via_soap {
    my ($login, $password, $boxname, $descboxname, $country) = @_;
    my $w = $in->wait_message(N("Please wait"), N("Reading configuration\n")) if $ia;
    my $reg_host = mdkonline::register_upload_host($login, $password, $boxname, $descboxname, $country);
    undef $w if $w;
    $reg_host
}

sub send_conf {
    my ($log, $pass, $box) = @_;
    my $uplink = $online_link . '/wizard.php';
    my $pp = md5_hex($pass);
    my $w = $in->wait_message(N("Please wait"), N("Reading configuration\n")) if $ia;
    mdkonline::report_config("$confdir/$log.$pp.$box.online.log");
    my $tag = { submit => "upload_wizard", wizard => ["$confdir/$log.$pp.$box.online.log.bz2.uue"] };
    undef $w if $w;
    my $ww = $in->wait_message(N("Please wait"), N("Sending configuration...")) if $ia;
    ($sendconfres, $key) = mdkonline::send_config($uplink, $tag);
    mdkonline::hw_upload($log, $pass, $box);
    undef $ww if $ww;
    ($sendconfres, $key);
}

my $wiz = wizards->new(
  {
   name => N("Mandriva Online"),
      pages => {
		welcome => {
			    name => N("This assistant will help you to upload your configuration\n(packages, hardware configuration) to a centralized database in\norder to keep you informed about security updates and useful upgrades.\n"),
			    no_back => 1,
			    next => 'choices'
			   },
		choices => {
			    name => N("Account creation or authentication"),
			    data => [ { val => \$choice, type => 'list', list => [ values %choices ] } ],
			    post => sub { +{ reverse %choices }->{$choice} },
			   },
		account => {
			    name => N("Enter your Mandriva Online login, password and machine name:"),
			    pre => sub {
				get_conf();
			    },
			    data => sub {
				[
				 { label => N("Email address:"), val => \$login },
				 { label => N("Password:"), val => \$password, hidden => 1 },
				 { label => N("Machine name:"), val => \$boxname },
				 { label => N("Machine description:"), val => \$descboxname },
				 { label => N("(Ex: My Home Office's Computer)")},
				];
			    },
			    post => sub {
				if (!mdkonline::check_valid_boxname($boxname)) {
				    $is_success = N("Machine name must be 1 to 40 alphanumerical characters");
				} else {
				    my $_wait = $in->wait_message(N("Please wait"), N("Connecting to Mandriva Online website...")) if $ia;
				    @info = ($login, $password);
				    $is_success = mdkonline::create_authenticate_account('authenticate', @info); undef($_wait);
				}
				"authenticate";
			    },
			   },
		authenticate => {
				 name => sub {
				     if ($is_success eq 'OK') {
					 N("In order to benefit from Mandriva Online services,\nwe are about to upload your configuration.\n\nThe Wizard will now send the following information to Mandriva:\n1) the list of packages you have installed on your system,\n2) your hardware configuration.\n\nIf you feel uncomfortable by that idea, or do not want to benefit from this service,\nplease press 'Cancel'. By pressing 'Next', you allow us to keep you informed\nabout security updates and useful upgrades via personalized email alerts.\nFurthermore, you benefit from discounted paid support services on\nwww.mandrivaexpert.com.");
       				     } else {
					 $is_success
				     }
				 },
				 no_back => $is_success eq 'OK' ? 1 : 0,
				 post => sub { 
				     if ($is_success eq 'OK') {
					 $sendconfres = send_conf_via_soap($login, $password, $boxname, $descboxname, $country);
					 "upload";
				     } else { "choices" }
				 }
				},
		noaccount => {
			      name => N("Create a Mandriva Online Account"),
			      data => sub {
				  [
				   { label => N("Greeting:"), val => \$greeting, list => [ @greets ], type => 'combo'},
				   { label => N("First name:"), val => \$firstname },
				   { label => N("Last name:"), val => \$lastname },
				   { label => N("Email address:"), val => \$account },
				   { label => N("Password:"), val => \$npassword, hidden => 1 },
				   { label => N("Confirm Password:"), val => \$cfmpassword, hidden => 1 },
				  ];
			      },
			      post => sub {
				  $gr = find_index { /$gr/ } @greets;
				  $alias = $firstname . $lastname;
				  @info = ($account, $npassword, $firstname, $lastname, $lang, $greeting, $alias, 'home');
				  $createaccount = $npassword ne $cfmpassword ? N("The passwords do not match\n Please try again\n") : (!$account || !$firstname || !$lastname) ? N("Please fill in each field") : mdkonline::check_valid_email($email) == 0 ?  N("Not a valid mail address!\n") : mdkonline::create_authenticate_account('create', @info);
				  "createaccount";
			      }
			     },
		createaccount => {
				  name => sub { 
				      $createaccount eq 'OK' ? "\n\n" . N("Mandriva Online Account successfully created.\nPlease click \"Next\" to authenticate and upload your configuration\n") : $createaccount;
				  },
				  post => sub {
				      $createaccount eq 'OK' ? "account" : "noaccount";
				  }
				 },
		upload => {
			   name => sub {
			       if ($sendconfres eq 'TRUE') {
				   "\n\n" . N("Your upload was successful!") . "\n\n" . N("From now you will receive on security and updates \nannouncements thanks to Mandriva Online.") . "\n\n" . N("Mandriva Online offers you the ability to automate the updates.\nA program will run regulary in your system waiting for new updates\n");
			       } else {
				   N("Connection problem") . N("Problem occurs when uploading files, please try again");
			       }
			   },
			   data => sub {
			       if ($sendconfres eq 'TRUE') {
				   [
				    { label => N("Country"), val => \$country, type => "combo", list => [ sort keys %countries ], not_edit => 0 }
				   ];
			       }
			   },
			   post => sub {
			       if ($sendconfres eq 'TRUE') {
				   #mdkonline::automated_upgrades($conffile, $login, md5_hex($password), $boxname, $key, $country, 'TRUE');
				   #mdkonline::write_conf($registered);
				   #mdkonline::clean_confdir();
				   "end";
			       } else {
				   "authenticate";
			       }
			   },
			  },
		end => {
			name => sub {
			    N("Congratulations") . "\n\n" . N("Your Mandriva Online account has been successfully configured\n");
			  },
			end => 1,
			no_back => 1,
			next => 0,
		       }
	       }
  });

if (!$ia && $login && $password && $boxname) { 
    $is_success = mdkonline::create_authenticate_account('authenticate', $login, $password);
    if ($is_success eq 'OK') {
	$sendconfres = send_conf_via_soap($login, $password, $boxname, $descboxname, $country);
	print "RESULT = $sendconfres";
	if ($sendconfres eq 'TRUE') {
	    #mdkonline::automated_upgrades($conffile, $login, md5_hex($password), $boxname, $key, $country, 'TRUE');
	    #mdkonline::write_wide_conf($login, $boxname, $country);
	    #output_p($logfile, N("Configuration uploaded successfully"));
	} else { output_p($logfile, N("Problem uploading configuration")) }
    } else { 
	output_p($logfile, N("Cannot connect to Mandriva Online website: wrong login/password or router/firewall bad settings"));
    }
} else {
    $wiz->safe_process($in);
}
